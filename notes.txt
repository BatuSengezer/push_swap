--Handle errors of string input and duplicate input
free mallocs in case of error and wrong input
check if the libft is working when you remove for mac and issign (probably on makefile you need to include objdir before objs)
check malloc when there is error


error check
./push_swap 0 one 2 3
ARG="4 67 3 87 23"; ./push_swap $ARG

sorted check
ARG="4 67 3 87 23 5 0"; ./push_swap $ARG | ./checker_Mac $ARG   



--shell generate random ints in Bash 
n=5
for ((i=0; i<$n; i++)); do echo $((RANDOM % 100 + 1)); done

--shell generate random ints in Bash for a program
n=5; ./push_swap $(for ((i=0; i<$n; i++)); do echo $((RANDOM % 100 + 1)); done) 

--shell generate random ints in Bash for a program and connect it to checker
n=10; ARG=$(shuf -i 1-1000 -n $n | tr '\n' ' '); ./push_swap $ARG | ./checker_linux $ARG




-- memory leak check
valgrind --leak-check=full \
         --show-leak-kinds=all \
         --track-origins=yes \
         --verbose \
         --log-file=valgrind-out.txt \
         ./push_swap 3 7 9


with shell commands
n=10; ARG=$(shuf -i 1-1000 -n $n | tr '\n' ' '); valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose --log-file=valgrind-out.txt ./push_swap $ARG







1)
*stack for reading **stack for manipulating linked list

2)
if you want to modify the stack_a pointer itself within the free_list function 
(e.g., set it to NULL after freeing the memory), you should use free_list(&stack_a). 
If you only want to free the memory associated with the elements of the list and not modify 
the stack_a pointer itself, you should pass stack_a directly to the free_list function

3)